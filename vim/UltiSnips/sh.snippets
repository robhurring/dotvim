snippet _skeleton "Shell script skeleton"
#!/usr/bin/env sh

# ${1:support}
# ${2:usage}

main() {
	$0
}

main
endsnippet

snippet #!
#!/usr/bin/env ${1:bash}

$0
endsnippet

snippet getopts "Getopts"
while getopts ":h" opt; do
	case $opt in
		\?|h)
			echo "<usage>"
			;;$1
	esac
done
shift $((OPTIND-1))$0
endsnippet

snippet req "Current script pwd"
source "$(cd "$(dirname "$0")" && pwd)/${1:helpers.sh}"
endsnippet

snippet flags "Script flags block"
usage() {
cat << EOU
Usage: $(basename $0) [FLAGS] <ARGS>
Flags:
	-h		Print Help
EOU
echo
exit 1
}

while getopts ":h" opt; do
	case $opt in
		\?|h)
			usage
			;;
	esac
done
shift $((OPTIND-1))

if [ $# -eq 0 ]; then
	usage
fi

$0
endsnippet

snippet colors "Shell support"
colorize() {
	printf "\033[38;1;\${1}m\${2}\033[0m\n" "${@:3}"
}

error() {
	colorize "9" "$@"
}

success() {
	colorize "10" "$@"
}

run() {
	local cmd="$*"
	colorize "240" "$ \e[0;37m%s" "$cmd"
	eval "$cmd"
}
endsnippet

snippet commands "Scripts commands case"
if [ $# = 0 ]; then
	usage;
fi

while [ $# -gt 0 ]; do
	arg=\$1;

	case $arg in
		"command" | "c" )
			break ;;

		"help" | * )
			usage;
			break ;;
	esac
done
endsnippet

snippet entrypoint "docker-entrypoint"
#!/bin/bash
set -e

if [ "\$1" = '${1}' ]; then
	exec gosu $1 "$@"$0
fi

exec "$@"
endsnippet

snippet prompt "prompt user"
prompt() {
	local ask="${1}"
	local code="${2:-35}"

	if [[ $OSTYPE == darwin* ]]; then
		esc="\033"
	else
		esc="\e"
	fi

	printf "${esc}[${code}m${ask}${esc}[0m"
	read -n1 -r
	echo
}
endsnippet

snippet xdg "XDG_CONFIG_HOME"
${XDG_CONFIG_HOME:-$HOME/.config}
endsnippet

snippet xdg "XDG_CACHE_HOME"
${XDG_CACHE_HOME:-$HOME/.cache}
endsnippet

snippet xdg "XDG_DATA_HOME"
${XDG_DATA_HOME:-$HOME/.local/share}
endsnippet
