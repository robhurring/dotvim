"                     _       _            _
"           _ __ ___ (_)_ __ (_)    __   _(_)_ __ ___
"          | '_ ` _ \| | '_ \| |____\ \ / / | '_ ` _ \
"          | | | | | | | | | | |_____\ V /| | | | | | |
"          |_| |_| |_|_|_| |_|_|      \_/ |_|_| |_| |_|
"              a light-weight, portable and cozy vimrc!
"
"  $ \curl -sSL https://raw.githubusercontent.com/robhurring/dotvim/master/mim/install.sh|bash
"  $ vim -u ~/.mimrc
"
let s:mim_home=expand("~/.mim")
let s:mim_plugin_home=s:mim_home."/plugged"
let g:mapleader="\<Space>"
let g:maplocalleader=','
inoremap <special> jk <Esc>l

filetype plugin indent on
syntax on

" change cursor in insert (xterm)
let &t_SI = "\<Esc>[6 q"
let &t_EI = "\<Esc>[2 q"

" directories
let &rtp.=','.s:mim_home
let &undodir=s:mim_home."/tmp"
let &directory=s:mim_home."/tmp/"
let &backupdir=s:mim_home."/tmp"

set t_ut= " see: http://sunaku.github.io/vim-256color-bce.html

" Plugins {{{
call plug#begin(s:mim_plugin_home)
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'scrooloose/nerdtree'
let g:NERDTreeMinimalUI = 1
call plug#end()
" }}}

" Settings {{{
set nocompatible
set autoindent
set autoread
set backspace=indent,eol,start
set clipboard=unnamed
set hidden
set hlsearch
set ignorecase
set incsearch
set number
set nowrap
set shiftwidth=2
set showmatch
set smartcase
set smartindent
set smarttab
set undofile
set shiftround
set splitbelow
set splitright
set tabstop=2
set wildignore+=*/.git/**/*,*/.hg/**/*,*/.svn/**/*
set tags+=./tags,./git/tags
set laststatus=2
set statusline=%n:\ %{pathshorten(fnamemodify(expand(\"%\"),\":~:\.\"))}\ %y\ %m%r%w%h
set statusline+=%=%q\ %p%%

if executable('ag')
  set grepprg=ag\ -f\ --vimgrep\ $*
  set grepformat=%f:%l:%c:%m
endif

let g:netrw_liststyle = 3

colorscheme slate
" }}}

" Mappings {{{
nnoremap Y y$
nnoremap J mzJ`z
nnoremap k gk
nnoremap j gj

xnoremap <leader>p "0p
xnoremap <leader>P "0P

nnoremap <silent> <C-x> :bd<CR>
nnoremap <tab><tab> :b#<CR>

nnoremap <silent> \ @=(foldlevel('.')?'za':"\\")<CR>
vnoremap \ zf

nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <C-h> <C-w>h

nnoremap <silent> <leader>/ :noh<CR>
nnoremap <localleader>/ :%s/\<<c-r><c-w>\>/<c-r><c-w>/Ic<left><left><left>
vnoremap <localleader>/ "zy:%s/<C-r>z//gc<left><left><left>

" Plugin mappings
map <C-_> gcc<Esc>
imap <C-Up> <Esc>[egi
imap <C-Down> <Esc>]egi
nmap <C-Up> [e
nmap <C-down> ]e
vmap <C-Up> [egv
vmap <C-Down> ]egv

nnoremap <Plug>QuickOpen :NERDTreeClose\|:CtrlP<.><cr>
nmap <NUL> <Plug>QuickOpen
nmap <C-Space> <Plug>QuickOpen
" }}}

" Bootstrap {{{
function! s:Bootstrap()
  if !isdirectory(s:mim_home."/tmp")
    silent! if !mkdir(s:mim_home."/tmp", "p", 0700)
      echohl ErrorMsg | echomsg 'Cannot create directory (may be a regular file): ' . path | echohl None
      return
    endif
  endif
  if !isdirectory(s:mim_plugin_home)
    echom 'Installing Plugins'
    PlugInstall
  endif
endfunction

augroup VimrcGroup
  autocmd!
  autocmd VimEnter * call s:Bootstrap()
augroup END

" vim: fdm=marker ft=vim
